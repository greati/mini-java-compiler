Terminals unused in grammar

   LAMBDA


Grammar

    0 $accept: program END_OF_FILE

    1 program: TOK_PROGRAM TOK_IDENTIFIER TOK_SEMICOLON class_decl_list

    2 class_decl_list: class_decl
    3                | class_decl class_decl_list

    4 class_decl: TOK_CLASS TOK_IDENTIFIER class_body
    5           | TOK_CLASS error class_body

    6 class_body: TOK_LCURLY decls_opt method_decl_list TOK_RCURLY
    7           | TOK_LCURLY error TOK_RCURLY

    8 decls_opt: %empty
    9          | decls

   10 decls: TOK_DECLARATIONS field_decl_list_decls TOK_ENDDECLARATIONS
   11      | TOK_DECLARATIONS error TOK_ENDDECLARATIONS

   12 method_decl_list: %empty
   13                 | method_decl method_decl_list

   14 field_decl_list_decls: %empty
   15                      | field_decl TOK_SEMICOLON field_decl_list_decls

   16 field_decl: type field_decl_list

   17 field_decl_aux: var_decl_id
   18               | var_decl_id TOK_EQUALS var_init

   19 field_decl_list: field_decl_aux
   20                | field_decl_aux TOK_COMMA field_decl_list

   21 type: type_aux brackets_opt

   22 type_aux: TOK_IDENTIFIER
   23         | TOK_INT
   24         | TOK_STRING

   25 brackets_opt: %empty
   26             | TOK_LRSQUARE brackets_opt

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt TOK_RPAREN block
   28            | TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN error TOK_RPAREN block

   29 method_return_type: TOK_VOID
   30                   | type

   31 formal_params: TOK_VAL type id_list_comma
   32              | type id_list_comma

   33 formal_params_list: formal_params
   34                   | formal_params TOK_SEMICOLON formal_params_list

   35 id_list_comma: TOK_IDENTIFIER
   36              | TOK_IDENTIFIER TOK_COMMA id_list_comma

   37 formal_params_list_opt: %empty
   38                       | formal_params_list

   39 var_decl_id: TOK_IDENTIFIER brackets_opt

   40 var_init: expr
   41         | array_init
   42         | array_creation_expr

   43 array_init: TOK_LCURLY var_init_list_comma TOK_RCURLY
   44           | TOK_LCURLY error TOK_RCURLY

   45 var_init_list_comma: var_init
   46                    | var_init TOK_COMMA var_init_list_comma

   47 array_creation_expr: TOK_ARROBA type array_dim_decl_list

   48 array_dim_decl_list: TOK_LSQUARE expr TOK_RSQUARE
   49                    | TOK_LSQUARE expr TOK_RSQUARE array_dim_decl_list

   50 block: decls_opt stmt_list

   51 stmt_list: TOK_LCURLY stmt_list_semicolon TOK_RCURLY
   52          | TOK_LCURLY error TOK_RCURLY

   53 stmt_list_semicolon: stmt
   54                    | stmt TOK_SEMICOLON stmt_list_semicolon

   55 stmt: var TOK_ASSIGN expr
   56     | var TOK_LPAREN actual_params_list TOK_RPAREN
   57     | var TOK_LPAREN error TOK_RPAREN
   58     | return_stmt
   59     | if_stmt
   60     | while_stmt
   61     | for_stmt
   62     | switch_stmt
   63     | print_stmt
   64     | read_stmt

   65 actual_params_list: %empty
   66                   | expr_list_comma

   67 expr_list_comma: expr
   68                | expr TOK_COMMA expr_list_comma

   69 return_stmt: TOK_RETURN
   70            | TOK_RETURN expr

   71 if_stmt: TOK_IF expr stmt_list
   72        | TOK_IF expr stmt_list TOK_ELSE if_stmt
   73        | TOK_IF expr stmt_list TOK_ELSE stmt_list

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr stmt_list

   76 while_stmt: TOK_WHILE expr stmt_list

   77 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list TOK_RCURLY
   78            | TOK_SWITCH expr TOK_LCURLY case_list TOK_DEFAULT stmt_list TOK_RCURLY
   79            | TOK_SWITCH error TOK_LCURLY
   80            | TOK_SWITCH expr TOK_LCURLY error TOK_RCURLY

   81 case: TOK_CASE expr stmt_list
   82     | TOK_CASE error stmt_list

   83 case_list: case
   84          | case case_list

   85 print_stmt: TOK_PRINT expr

   86 read_stmt: TOK_READ TOK_IDENTIFIER

   87 expr: al_expr TOK_EQEQ al_expr
   88     | al_expr TOK_LESS al_expr
   89     | al_expr TOK_LESSEQ al_expr
   90     | al_expr TOK_GREATEREQ al_expr
   91     | al_expr TOK_GREATER al_expr
   92     | al_expr TOK_DIFF al_expr
   93     | al_expr

   94 al_expr: TOK_PLUS al_expr
   95        | TOK_MINUS al_expr
   96        | TOK_NOT al_expr
   97        | al_expr TOK_PLUS al_expr
   98        | al_expr TOK_MINUS al_expr
   99        | al_expr TOK_2PIPE al_expr
  100        | al_expr TOK_ASTERISK al_expr
  101        | al_expr TOK_SLASH al_expr
  102        | al_expr TOK_AND al_expr
  103        | al_expr TOK_MOD al_expr
  104        | TOK_LPAREN expr TOK_RPAREN
  105        | TOK_LPAREN error TOK_RPAREN
  106        | TOK_INTEGERCONSTANT
  107        | TOK_STRINGCONSTANT
  108        | var
  109        | var TOK_LPAREN actual_params_list TOK_RPAREN
  110        | var TOK_LPAREN error TOK_RPAREN

  111 var: TOK_IDENTIFIER var_aux

  112 var_aux: %empty
  113        | TOK_DOT TOK_IDENTIFIER var_aux
  114        | TOK_LSQUARE expr_list_comma TOK_RSQUARE var_aux


Terminals, with rules where they appear

END_OF_FILE <litString> (0) 0
TOK_PROGRAM (1) 1
TOK_IDENTIFIER <id> (2) 1 4 22 27 28 35 36 39 74 75 86 111 113
TOK_SEMICOLON <id> (3) 1 15 34 54
TOK_CLASS <id> (4) 4 5
TOK_LCURLY <id> (5) 6 7 43 44 51 52 77 78 79 80
TOK_RCURLY <id> (6) 6 7 43 44 51 52 77 78 80
TOK_DECLARATIONS <id> (7) 10 11
TOK_ENDDECLARATIONS <id> (8) 10 11
TOK_EQUALS <id> (9) 18
TOK_COMMA <id> (10) 20 36 46 68
TOK_INT <typeName> (11) 23
TOK_STRING <typeName> (12) 24
TOK_LRSQUARE <typeName> (13) 26
TOK_METHOD <typeName> (14) 27 28
TOK_LPAREN <typeName> (15) 27 28 56 57 104 105 109 110
TOK_RPAREN <typeName> (16) 27 28 56 57 104 105 109 110
TOK_VOID <typeName> (17) 29
TOK_VAL <typeName> (18) 31
TOK_ARROBA <typeName> (19) 47
TOK_LSQUARE <typeName> (20) 48 49 114
TOK_RSQUARE <typeName> (21) 48 49 114
TOK_ASSIGN <typeName> (22) 55 74 75
TOK_RETURN <typeName> (23) 69 70
TOK_IF <typeName> (24) 71 72 73
TOK_ELSE <typeName> (25) 72 73
TOK_FOR <typeName> (26) 74 75
TOK_TO <typeName> (27) 74 75
TOK_STEP <typeName> (28) 74
TOK_WHILE <typeName> (29) 76
TOK_SWITCH <typeName> (30) 77 78 79 80
TOK_CASE <typeName> (31) 81 82
TOK_DEFAULT <typeName> (32) 78
TOK_PRINT <typeName> (33) 85
TOK_READ <typeName> (34) 86
TOK_LESS <typeName> (35) 88
TOK_LESSEQ <typeName> (36) 89
TOK_EQEQ <typeName> (37) 87
TOK_DIFF <typeName> (38) 92
TOK_GREATEREQ <typeName> (39) 90
TOK_GREATER <typeName> (40) 91
TOK_PLUS <typeName> (41) 94 97
TOK_UPLUS <typeName> (42)
TOK_MINUS <typeName> (43) 95 98
TOK_UMINUS <typeName> (44)
TOK_NOT <typeName> (45) 96
TOK_2PIPE <typeName> (46) 99
TOK_ASTERISK <typeName> (47) 100
TOK_SLASH <typeName> (48) 101
TOK_AND <typeName> (49) 102
TOK_MOD <typeName> (50) 103
TOK_INTEGERCONSTANT <litInt> (51) 106
TOK_STRINGCONSTANT <litString> (52) 107
TOK_DOT <litString> (53) 113
LAMBDA <litString> (55)
error (256) 5 7 11 28 44 52 57 79 80 82 105 110


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
program <program> (58)
    on left: 1, on right: 0
class_decl_list <classDeclList> (59)
    on left: 2 3, on right: 1 3
class_decl <classDecl> (60)
    on left: 4 5, on right: 2 3
class_body <classBody> (61)
    on left: 6 7, on right: 4 5
decls_opt <decls> (62)
    on left: 8 9, on right: 6 50
decls <decls> (63)
    on left: 10 11, on right: 9
method_decl_list <methodDeclList> (64)
    on left: 12 13, on right: 6 13
field_decl_list_decls <fieldDeclList> (65)
    on left: 14 15, on right: 10 15
field_decl <fieldDecl> (66)
    on left: 16, on right: 15
field_decl_aux <fieldDeclVar> (67)
    on left: 17 18, on right: 19 20
field_decl_list <fieldDeclVarList> (68)
    on left: 19 20, on right: 16 20
type <type> (69)
    on left: 21, on right: 16 30 31 32 47
type_aux <litString> (70)
    on left: 22 23 24, on right: 21
brackets_opt <litInt> (71)
    on left: 25 26, on right: 21 26 39
method_decl <methodDecl> (72)
    on left: 27 28, on right: 13
method_return_type <methodReturnType> (73)
    on left: 29 30, on right: 27 28
formal_params <formalParams> (74)
    on left: 31 32, on right: 33 34
formal_params_list <formalParamsList> (75)
    on left: 33 34, on right: 34 38
id_list_comma <stringList> (76)
    on left: 35 36, on right: 31 32 36
formal_params_list_opt <formalParamsList> (77)
    on left: 37 38, on right: 27
var_decl_id <varDeclId> (78)
    on left: 39, on right: 17 18
var_init <varInit> (79)
    on left: 40 41 42, on right: 18 45 46
array_init <arrayInit> (80)
    on left: 43 44, on right: 41
var_init_list_comma <varInitList> (81)
    on left: 45 46, on right: 43 46
array_creation_expr <arrayCreation> (82)
    on left: 47, on right: 42
array_dim_decl_list <constructList> (83)
    on left: 48 49, on right: 47 49
block <block> (84)
    on left: 50, on right: 27 28
stmt_list <stmtList> (85)
    on left: 51 52, on right: 50 71 72 73 74 75 76 78 81 82
stmt_list_semicolon <stmtList> (86)
    on left: 53 54, on right: 51 54
stmt <stmt> (87)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 53 54
actual_params_list <constructList> (88)
    on left: 65 66, on right: 56 109
expr_list_comma <constructList> (89)
    on left: 67 68, on right: 66 68 114
return_stmt <returnStmt> (90)
    on left: 69 70, on right: 58
if_stmt <ifStmt> (91)
    on left: 71 72 73, on right: 59 72
for_stmt <forStmt> (92)
    on left: 74 75, on right: 61
while_stmt <whileStmt> (93)
    on left: 76, on right: 60
switch_stmt <switchStmt> (94)
    on left: 77 78 79 80, on right: 62
case <case_> (95)
    on left: 81 82, on right: 83 84
case_list <caseList> (96)
    on left: 83 84, on right: 77 78 84
print_stmt <printStmt> (97)
    on left: 85, on right: 63
read_stmt <readStmt> (98)
    on left: 86, on right: 64
expr <expr> (99)
    on left: 87 88 89 90 91 92 93, on right: 40 48 49 55 67 68 70 71
    72 73 74 75 76 77 78 80 81 85 104
al_expr <alExpr> (100)
    on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109 110, on right: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 103
var <var> (101)
    on left: 111, on right: 55 56 57 108 109 110
var_aux <accessOp> (102)
    on left: 112 113 114, on right: 111 113 114


State 0

    0 $accept: . program END_OF_FILE

    TOK_PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: TOK_PROGRAM . TOK_IDENTIFIER TOK_SEMICOLON class_decl_list

    TOK_IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . END_OF_FILE

    END_OF_FILE  shift, and go to state 4


State 3

    1 program: TOK_PROGRAM TOK_IDENTIFIER . TOK_SEMICOLON class_decl_list

    TOK_SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program END_OF_FILE .

    $default  accept


State 5

    1 program: TOK_PROGRAM TOK_IDENTIFIER TOK_SEMICOLON . class_decl_list

    TOK_CLASS  shift, and go to state 6

    class_decl_list  go to state 7
    class_decl       go to state 8


State 6

    4 class_decl: TOK_CLASS . TOK_IDENTIFIER class_body
    5           | TOK_CLASS . error class_body

    error           shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10


State 7

    1 program: TOK_PROGRAM TOK_IDENTIFIER TOK_SEMICOLON class_decl_list .

    $default  reduce using rule 1 (program)


State 8

    2 class_decl_list: class_decl .
    3                | class_decl . class_decl_list

    TOK_CLASS  shift, and go to state 6

    $default  reduce using rule 2 (class_decl_list)

    class_decl_list  go to state 11
    class_decl       go to state 8


State 9

    5 class_decl: TOK_CLASS error . class_body

    TOK_LCURLY  shift, and go to state 12

    class_body  go to state 13


State 10

    4 class_decl: TOK_CLASS TOK_IDENTIFIER . class_body

    TOK_LCURLY  shift, and go to state 12

    class_body  go to state 14


State 11

    3 class_decl_list: class_decl class_decl_list .

    $default  reduce using rule 3 (class_decl_list)


State 12

    6 class_body: TOK_LCURLY . decls_opt method_decl_list TOK_RCURLY
    7           | TOK_LCURLY . error TOK_RCURLY

    error             shift, and go to state 15
    TOK_DECLARATIONS  shift, and go to state 16

    TOK_RCURLY  reduce using rule 8 (decls_opt)
    TOK_METHOD  reduce using rule 8 (decls_opt)

    decls_opt  go to state 17
    decls      go to state 18


State 13

    5 class_decl: TOK_CLASS error class_body .

    $default  reduce using rule 5 (class_decl)


State 14

    4 class_decl: TOK_CLASS TOK_IDENTIFIER class_body .

    $default  reduce using rule 4 (class_decl)


State 15

    7 class_body: TOK_LCURLY error . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 19


State 16

   10 decls: TOK_DECLARATIONS . field_decl_list_decls TOK_ENDDECLARATIONS
   11      | TOK_DECLARATIONS . error TOK_ENDDECLARATIONS

    error           shift, and go to state 20
    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23

    TOK_ENDDECLARATIONS  reduce using rule 14 (field_decl_list_decls)

    field_decl_list_decls  go to state 24
    field_decl             go to state 25
    type                   go to state 26
    type_aux               go to state 27


State 17

    6 class_body: TOK_LCURLY decls_opt . method_decl_list TOK_RCURLY

    TOK_METHOD  shift, and go to state 28

    $default  reduce using rule 12 (method_decl_list)

    method_decl_list  go to state 29
    method_decl       go to state 30


State 18

    9 decls_opt: decls .

    $default  reduce using rule 9 (decls_opt)


State 19

    7 class_body: TOK_LCURLY error TOK_RCURLY .

    $default  reduce using rule 7 (class_body)


State 20

   11 decls: TOK_DECLARATIONS error . TOK_ENDDECLARATIONS

    TOK_ENDDECLARATIONS  shift, and go to state 31


State 21

   22 type_aux: TOK_IDENTIFIER .

    $default  reduce using rule 22 (type_aux)


State 22

   23 type_aux: TOK_INT .

    $default  reduce using rule 23 (type_aux)


State 23

   24 type_aux: TOK_STRING .

    $default  reduce using rule 24 (type_aux)


State 24

   10 decls: TOK_DECLARATIONS field_decl_list_decls . TOK_ENDDECLARATIONS

    TOK_ENDDECLARATIONS  shift, and go to state 32


State 25

   15 field_decl_list_decls: field_decl . TOK_SEMICOLON field_decl_list_decls

    TOK_SEMICOLON  shift, and go to state 33


State 26

   16 field_decl: type . field_decl_list

    TOK_IDENTIFIER  shift, and go to state 34

    field_decl_aux   go to state 35
    field_decl_list  go to state 36
    var_decl_id      go to state 37


State 27

   21 type: type_aux . brackets_opt

    TOK_LRSQUARE  shift, and go to state 38

    $default  reduce using rule 25 (brackets_opt)

    brackets_opt  go to state 39


State 28

   27 method_decl: TOK_METHOD . method_return_type TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt TOK_RPAREN block
   28            | TOK_METHOD . method_return_type TOK_IDENTIFIER TOK_LPAREN error TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23
    TOK_VOID        shift, and go to state 40

    type                go to state 41
    type_aux            go to state 27
    method_return_type  go to state 42


State 29

    6 class_body: TOK_LCURLY decls_opt method_decl_list . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 43


State 30

   13 method_decl_list: method_decl . method_decl_list

    TOK_METHOD  shift, and go to state 28

    $default  reduce using rule 12 (method_decl_list)

    method_decl_list  go to state 44
    method_decl       go to state 30


State 31

   11 decls: TOK_DECLARATIONS error TOK_ENDDECLARATIONS .

    $default  reduce using rule 11 (decls)


State 32

   10 decls: TOK_DECLARATIONS field_decl_list_decls TOK_ENDDECLARATIONS .

    $default  reduce using rule 10 (decls)


State 33

   15 field_decl_list_decls: field_decl TOK_SEMICOLON . field_decl_list_decls

    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23

    $default  reduce using rule 14 (field_decl_list_decls)

    field_decl_list_decls  go to state 45
    field_decl             go to state 25
    type                   go to state 26
    type_aux               go to state 27


State 34

   39 var_decl_id: TOK_IDENTIFIER . brackets_opt

    TOK_LRSQUARE  shift, and go to state 38

    $default  reduce using rule 25 (brackets_opt)

    brackets_opt  go to state 46


State 35

   19 field_decl_list: field_decl_aux .
   20                | field_decl_aux . TOK_COMMA field_decl_list

    TOK_COMMA  shift, and go to state 47

    $default  reduce using rule 19 (field_decl_list)


State 36

   16 field_decl: type field_decl_list .

    $default  reduce using rule 16 (field_decl)


State 37

   17 field_decl_aux: var_decl_id .
   18               | var_decl_id . TOK_EQUALS var_init

    TOK_EQUALS  shift, and go to state 48

    $default  reduce using rule 17 (field_decl_aux)


State 38

   26 brackets_opt: TOK_LRSQUARE . brackets_opt

    TOK_LRSQUARE  shift, and go to state 38

    $default  reduce using rule 25 (brackets_opt)

    brackets_opt  go to state 49


State 39

   21 type: type_aux brackets_opt .

    $default  reduce using rule 21 (type)


State 40

   29 method_return_type: TOK_VOID .

    $default  reduce using rule 29 (method_return_type)


State 41

   30 method_return_type: type .

    $default  reduce using rule 30 (method_return_type)


State 42

   27 method_decl: TOK_METHOD method_return_type . TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt TOK_RPAREN block
   28            | TOK_METHOD method_return_type . TOK_IDENTIFIER TOK_LPAREN error TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 50


State 43

    6 class_body: TOK_LCURLY decls_opt method_decl_list TOK_RCURLY .

    $default  reduce using rule 6 (class_body)


State 44

   13 method_decl_list: method_decl method_decl_list .

    $default  reduce using rule 13 (method_decl_list)


State 45

   15 field_decl_list_decls: field_decl TOK_SEMICOLON field_decl_list_decls .

    $default  reduce using rule 15 (field_decl_list_decls)


State 46

   39 var_decl_id: TOK_IDENTIFIER brackets_opt .

    $default  reduce using rule 39 (var_decl_id)


State 47

   20 field_decl_list: field_decl_aux TOK_COMMA . field_decl_list

    TOK_IDENTIFIER  shift, and go to state 34

    field_decl_aux   go to state 35
    field_decl_list  go to state 51
    var_decl_id      go to state 37


State 48

   18 field_decl_aux: var_decl_id TOK_EQUALS . var_init

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LCURLY           shift, and go to state 53
    TOK_LPAREN           shift, and go to state 54
    TOK_ARROBA           shift, and go to state 55
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    var_init             go to state 61
    array_init           go to state 62
    array_creation_expr  go to state 63
    expr                 go to state 64
    al_expr              go to state 65
    var                  go to state 66


State 49

   26 brackets_opt: TOK_LRSQUARE brackets_opt .

    $default  reduce using rule 26 (brackets_opt)


State 50

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER . TOK_LPAREN formal_params_list_opt TOK_RPAREN block
   28            | TOK_METHOD method_return_type TOK_IDENTIFIER . TOK_LPAREN error TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 67


State 51

   20 field_decl_list: field_decl_aux TOK_COMMA field_decl_list .

    $default  reduce using rule 20 (field_decl_list)


State 52

  111 var: TOK_IDENTIFIER . var_aux

    TOK_LSQUARE  shift, and go to state 68
    TOK_DOT      shift, and go to state 69

    $default  reduce using rule 112 (var_aux)

    var_aux  go to state 70


State 53

   43 array_init: TOK_LCURLY . var_init_list_comma TOK_RCURLY
   44           | TOK_LCURLY . error TOK_RCURLY

    error                shift, and go to state 71
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LCURLY           shift, and go to state 53
    TOK_LPAREN           shift, and go to state 54
    TOK_ARROBA           shift, and go to state 55
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    var_init             go to state 72
    array_init           go to state 62
    var_init_list_comma  go to state 73
    array_creation_expr  go to state 63
    expr                 go to state 64
    al_expr              go to state 65
    var                  go to state 66


State 54

  104 al_expr: TOK_LPAREN . expr TOK_RPAREN
  105        | TOK_LPAREN . error TOK_RPAREN

    error                shift, and go to state 74
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 75
    al_expr  go to state 65
    var      go to state 66


State 55

   47 array_creation_expr: TOK_ARROBA . type array_dim_decl_list

    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23

    type      go to state 76
    type_aux  go to state 27


State 56

   94 al_expr: TOK_PLUS . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 77
    var      go to state 66


State 57

   95 al_expr: TOK_MINUS . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 78
    var      go to state 66


State 58

   96 al_expr: TOK_NOT . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 79
    var      go to state 66


State 59

  106 al_expr: TOK_INTEGERCONSTANT .

    $default  reduce using rule 106 (al_expr)


State 60

  107 al_expr: TOK_STRINGCONSTANT .

    $default  reduce using rule 107 (al_expr)


State 61

   18 field_decl_aux: var_decl_id TOK_EQUALS var_init .

    $default  reduce using rule 18 (field_decl_aux)


State 62

   41 var_init: array_init .

    $default  reduce using rule 41 (var_init)


State 63

   42 var_init: array_creation_expr .

    $default  reduce using rule 42 (var_init)


State 64

   40 var_init: expr .

    $default  reduce using rule 40 (var_init)


State 65

   87 expr: al_expr . TOK_EQEQ al_expr
   88     | al_expr . TOK_LESS al_expr
   89     | al_expr . TOK_LESSEQ al_expr
   90     | al_expr . TOK_GREATEREQ al_expr
   91     | al_expr . TOK_GREATER al_expr
   92     | al_expr . TOK_DIFF al_expr
   93     | al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_LESS       shift, and go to state 80
    TOK_LESSEQ     shift, and go to state 81
    TOK_EQEQ       shift, and go to state 82
    TOK_DIFF       shift, and go to state 83
    TOK_GREATEREQ  shift, and go to state 84
    TOK_GREATER    shift, and go to state 85
    TOK_PLUS       shift, and go to state 86
    TOK_MINUS      shift, and go to state 87
    TOK_2PIPE      shift, and go to state 88
    TOK_ASTERISK   shift, and go to state 89
    TOK_SLASH      shift, and go to state 90
    TOK_AND        shift, and go to state 91
    TOK_MOD        shift, and go to state 92

    $default  reduce using rule 93 (expr)


State 66

  108 al_expr: var .
  109        | var . TOK_LPAREN actual_params_list TOK_RPAREN
  110        | var . TOK_LPAREN error TOK_RPAREN

    TOK_LPAREN  shift, and go to state 93

    $default  reduce using rule 108 (al_expr)


State 67

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN . formal_params_list_opt TOK_RPAREN block
   28            | TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN . error TOK_RPAREN block

    error           shift, and go to state 94
    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23
    TOK_VAL         shift, and go to state 95

    TOK_RPAREN  reduce using rule 37 (formal_params_list_opt)

    type                    go to state 96
    type_aux                go to state 27
    formal_params           go to state 97
    formal_params_list      go to state 98
    formal_params_list_opt  go to state 99


State 68

  114 var_aux: TOK_LSQUARE . expr_list_comma TOK_RSQUARE var_aux

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr_list_comma  go to state 100
    expr             go to state 101
    al_expr          go to state 65
    var              go to state 66


State 69

  113 var_aux: TOK_DOT . TOK_IDENTIFIER var_aux

    TOK_IDENTIFIER  shift, and go to state 102


State 70

  111 var: TOK_IDENTIFIER var_aux .

    $default  reduce using rule 111 (var)


State 71

   44 array_init: TOK_LCURLY error . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 103


State 72

   45 var_init_list_comma: var_init .
   46                    | var_init . TOK_COMMA var_init_list_comma

    TOK_COMMA  shift, and go to state 104

    $default  reduce using rule 45 (var_init_list_comma)


State 73

   43 array_init: TOK_LCURLY var_init_list_comma . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 105


State 74

  105 al_expr: TOK_LPAREN error . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 106


State 75

  104 al_expr: TOK_LPAREN expr . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 107


State 76

   47 array_creation_expr: TOK_ARROBA type . array_dim_decl_list

    TOK_LSQUARE  shift, and go to state 108

    array_dim_decl_list  go to state 109


State 77

   94 al_expr: TOK_PLUS al_expr .
   97        | al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 94 (al_expr)


State 78

   95 al_expr: TOK_MINUS al_expr .
   97        | al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 95 (al_expr)


State 79

   96 al_expr: TOK_NOT al_expr .
   97        | al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 96 (al_expr)


State 80

   88 expr: al_expr TOK_LESS . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 110
    var      go to state 66


State 81

   89 expr: al_expr TOK_LESSEQ . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 111
    var      go to state 66


State 82

   87 expr: al_expr TOK_EQEQ . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 112
    var      go to state 66


State 83

   92 expr: al_expr TOK_DIFF . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 113
    var      go to state 66


State 84

   90 expr: al_expr TOK_GREATEREQ . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 114
    var      go to state 66


State 85

   91 expr: al_expr TOK_GREATER . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 115
    var      go to state 66


State 86

   97 al_expr: al_expr TOK_PLUS . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 116
    var      go to state 66


State 87

   98 al_expr: al_expr TOK_MINUS . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 117
    var      go to state 66


State 88

   99 al_expr: al_expr TOK_2PIPE . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 118
    var      go to state 66


State 89

  100 al_expr: al_expr TOK_ASTERISK . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 119
    var      go to state 66


State 90

  101 al_expr: al_expr TOK_SLASH . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 120
    var      go to state 66


State 91

  102 al_expr: al_expr TOK_AND . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 121
    var      go to state 66


State 92

  103 al_expr: al_expr TOK_MOD . al_expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    al_expr  go to state 122
    var      go to state 66


State 93

  109 al_expr: var TOK_LPAREN . actual_params_list TOK_RPAREN
  110        | var TOK_LPAREN . error TOK_RPAREN

    error                shift, and go to state 123
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    TOK_RPAREN  reduce using rule 65 (actual_params_list)

    actual_params_list  go to state 124
    expr_list_comma     go to state 125
    expr                go to state 101
    al_expr             go to state 65
    var                 go to state 66


State 94

   28 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN error . TOK_RPAREN block

    TOK_RPAREN  shift, and go to state 126


State 95

   31 formal_params: TOK_VAL . type id_list_comma

    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23

    type      go to state 127
    type_aux  go to state 27


State 96

   32 formal_params: type . id_list_comma

    TOK_IDENTIFIER  shift, and go to state 128

    id_list_comma  go to state 129


State 97

   33 formal_params_list: formal_params .
   34                   | formal_params . TOK_SEMICOLON formal_params_list

    TOK_SEMICOLON  shift, and go to state 130

    $default  reduce using rule 33 (formal_params_list)


State 98

   38 formal_params_list_opt: formal_params_list .

    $default  reduce using rule 38 (formal_params_list_opt)


State 99

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt . TOK_RPAREN block

    TOK_RPAREN  shift, and go to state 131


State 100

  114 var_aux: TOK_LSQUARE expr_list_comma . TOK_RSQUARE var_aux

    TOK_RSQUARE  shift, and go to state 132


State 101

   67 expr_list_comma: expr .
   68                | expr . TOK_COMMA expr_list_comma

    TOK_COMMA  shift, and go to state 133

    $default  reduce using rule 67 (expr_list_comma)


State 102

  113 var_aux: TOK_DOT TOK_IDENTIFIER . var_aux

    TOK_LSQUARE  shift, and go to state 68
    TOK_DOT      shift, and go to state 69

    $default  reduce using rule 112 (var_aux)

    var_aux  go to state 134


State 103

   44 array_init: TOK_LCURLY error TOK_RCURLY .

    $default  reduce using rule 44 (array_init)


State 104

   46 var_init_list_comma: var_init TOK_COMMA . var_init_list_comma

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LCURLY           shift, and go to state 53
    TOK_LPAREN           shift, and go to state 54
    TOK_ARROBA           shift, and go to state 55
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    var_init             go to state 72
    array_init           go to state 62
    var_init_list_comma  go to state 135
    array_creation_expr  go to state 63
    expr                 go to state 64
    al_expr              go to state 65
    var                  go to state 66


State 105

   43 array_init: TOK_LCURLY var_init_list_comma TOK_RCURLY .

    $default  reduce using rule 43 (array_init)


State 106

  105 al_expr: TOK_LPAREN error TOK_RPAREN .

    $default  reduce using rule 105 (al_expr)


State 107

  104 al_expr: TOK_LPAREN expr TOK_RPAREN .

    $default  reduce using rule 104 (al_expr)


State 108

   48 array_dim_decl_list: TOK_LSQUARE . expr TOK_RSQUARE
   49                    | TOK_LSQUARE . expr TOK_RSQUARE array_dim_decl_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 136
    al_expr  go to state 65
    var      go to state 66


State 109

   47 array_creation_expr: TOK_ARROBA type array_dim_decl_list .

    $default  reduce using rule 47 (array_creation_expr)


State 110

   88 expr: al_expr TOK_LESS al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 88 (expr)


State 111

   89 expr: al_expr TOK_LESSEQ al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 89 (expr)


State 112

   87 expr: al_expr TOK_EQEQ al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 87 (expr)


State 113

   92 expr: al_expr TOK_DIFF al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 92 (expr)


State 114

   90 expr: al_expr TOK_GREATEREQ al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 90 (expr)


State 115

   91 expr: al_expr TOK_GREATER al_expr .
   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_PLUS      shift, and go to state 86
    TOK_MINUS     shift, and go to state 87
    TOK_2PIPE     shift, and go to state 88
    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 91 (expr)


State 116

   97 al_expr: al_expr . TOK_PLUS al_expr
   97        | al_expr TOK_PLUS al_expr .
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 97 (al_expr)


State 117

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   98        | al_expr TOK_MINUS al_expr .
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 98 (al_expr)


State 118

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
   99        | al_expr TOK_2PIPE al_expr .
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    TOK_ASTERISK  shift, and go to state 89
    TOK_SLASH     shift, and go to state 90
    TOK_AND       shift, and go to state 91
    TOK_MOD       shift, and go to state 92

    $default  reduce using rule 99 (al_expr)


State 119

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  100        | al_expr TOK_ASTERISK al_expr .
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 100 (al_expr)


State 120

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  101        | al_expr TOK_SLASH al_expr .
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 101 (al_expr)


State 121

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  102        | al_expr TOK_AND al_expr .
  103        | al_expr . TOK_MOD al_expr

    $default  reduce using rule 102 (al_expr)


State 122

   97 al_expr: al_expr . TOK_PLUS al_expr
   98        | al_expr . TOK_MINUS al_expr
   99        | al_expr . TOK_2PIPE al_expr
  100        | al_expr . TOK_ASTERISK al_expr
  101        | al_expr . TOK_SLASH al_expr
  102        | al_expr . TOK_AND al_expr
  103        | al_expr . TOK_MOD al_expr
  103        | al_expr TOK_MOD al_expr .

    $default  reduce using rule 103 (al_expr)


State 123

  110 al_expr: var TOK_LPAREN error . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 137


State 124

  109 al_expr: var TOK_LPAREN actual_params_list . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 138


State 125

   66 actual_params_list: expr_list_comma .

    $default  reduce using rule 66 (actual_params_list)


State 126

   28 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN error TOK_RPAREN . block

    TOK_DECLARATIONS  shift, and go to state 16

    $default  reduce using rule 8 (decls_opt)

    decls_opt  go to state 139
    decls      go to state 18
    block      go to state 140


State 127

   31 formal_params: TOK_VAL type . id_list_comma

    TOK_IDENTIFIER  shift, and go to state 128

    id_list_comma  go to state 141


State 128

   35 id_list_comma: TOK_IDENTIFIER .
   36              | TOK_IDENTIFIER . TOK_COMMA id_list_comma

    TOK_COMMA  shift, and go to state 142

    $default  reduce using rule 35 (id_list_comma)


State 129

   32 formal_params: type id_list_comma .

    $default  reduce using rule 32 (formal_params)


State 130

   34 formal_params_list: formal_params TOK_SEMICOLON . formal_params_list

    TOK_IDENTIFIER  shift, and go to state 21
    TOK_INT         shift, and go to state 22
    TOK_STRING      shift, and go to state 23
    TOK_VAL         shift, and go to state 95

    type                go to state 96
    type_aux            go to state 27
    formal_params       go to state 97
    formal_params_list  go to state 143


State 131

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt TOK_RPAREN . block

    TOK_DECLARATIONS  shift, and go to state 16

    $default  reduce using rule 8 (decls_opt)

    decls_opt  go to state 139
    decls      go to state 18
    block      go to state 144


State 132

  114 var_aux: TOK_LSQUARE expr_list_comma TOK_RSQUARE . var_aux

    TOK_LSQUARE  shift, and go to state 68
    TOK_DOT      shift, and go to state 69

    $default  reduce using rule 112 (var_aux)

    var_aux  go to state 145


State 133

   68 expr_list_comma: expr TOK_COMMA . expr_list_comma

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr_list_comma  go to state 146
    expr             go to state 101
    al_expr          go to state 65
    var              go to state 66


State 134

  113 var_aux: TOK_DOT TOK_IDENTIFIER var_aux .

    $default  reduce using rule 113 (var_aux)


State 135

   46 var_init_list_comma: var_init TOK_COMMA var_init_list_comma .

    $default  reduce using rule 46 (var_init_list_comma)


State 136

   48 array_dim_decl_list: TOK_LSQUARE expr . TOK_RSQUARE
   49                    | TOK_LSQUARE expr . TOK_RSQUARE array_dim_decl_list

    TOK_RSQUARE  shift, and go to state 147


State 137

  110 al_expr: var TOK_LPAREN error TOK_RPAREN .

    $default  reduce using rule 110 (al_expr)


State 138

  109 al_expr: var TOK_LPAREN actual_params_list TOK_RPAREN .

    $default  reduce using rule 109 (al_expr)


State 139

   50 block: decls_opt . stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 149


State 140

   28 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN error TOK_RPAREN block .

    $default  reduce using rule 28 (method_decl)


State 141

   31 formal_params: TOK_VAL type id_list_comma .

    $default  reduce using rule 31 (formal_params)


State 142

   36 id_list_comma: TOK_IDENTIFIER TOK_COMMA . id_list_comma

    TOK_IDENTIFIER  shift, and go to state 128

    id_list_comma  go to state 150


State 143

   34 formal_params_list: formal_params TOK_SEMICOLON formal_params_list .

    $default  reduce using rule 34 (formal_params_list)


State 144

   27 method_decl: TOK_METHOD method_return_type TOK_IDENTIFIER TOK_LPAREN formal_params_list_opt TOK_RPAREN block .

    $default  reduce using rule 27 (method_decl)


State 145

  114 var_aux: TOK_LSQUARE expr_list_comma TOK_RSQUARE var_aux .

    $default  reduce using rule 114 (var_aux)


State 146

   68 expr_list_comma: expr TOK_COMMA expr_list_comma .

    $default  reduce using rule 68 (expr_list_comma)


State 147

   48 array_dim_decl_list: TOK_LSQUARE expr TOK_RSQUARE .
   49                    | TOK_LSQUARE expr TOK_RSQUARE . array_dim_decl_list

    TOK_LSQUARE  shift, and go to state 108

    $default  reduce using rule 48 (array_dim_decl_list)

    array_dim_decl_list  go to state 151


State 148

   51 stmt_list: TOK_LCURLY . stmt_list_semicolon TOK_RCURLY
   52          | TOK_LCURLY . error TOK_RCURLY

    error           shift, and go to state 152
    TOK_IDENTIFIER  shift, and go to state 52
    TOK_RETURN      shift, and go to state 153
    TOK_IF          shift, and go to state 154
    TOK_FOR         shift, and go to state 155
    TOK_WHILE       shift, and go to state 156
    TOK_SWITCH      shift, and go to state 157
    TOK_PRINT       shift, and go to state 158
    TOK_READ        shift, and go to state 159

    stmt_list_semicolon  go to state 160
    stmt                 go to state 161
    return_stmt          go to state 162
    if_stmt              go to state 163
    for_stmt             go to state 164
    while_stmt           go to state 165
    switch_stmt          go to state 166
    print_stmt           go to state 167
    read_stmt            go to state 168
    var                  go to state 169


State 149

   50 block: decls_opt stmt_list .

    $default  reduce using rule 50 (block)


State 150

   36 id_list_comma: TOK_IDENTIFIER TOK_COMMA id_list_comma .

    $default  reduce using rule 36 (id_list_comma)


State 151

   49 array_dim_decl_list: TOK_LSQUARE expr TOK_RSQUARE array_dim_decl_list .

    $default  reduce using rule 49 (array_dim_decl_list)


State 152

   52 stmt_list: TOK_LCURLY error . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 170


State 153

   69 return_stmt: TOK_RETURN .
   70            | TOK_RETURN . expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    $default  reduce using rule 69 (return_stmt)

    expr     go to state 171
    al_expr  go to state 65
    var      go to state 66


State 154

   71 if_stmt: TOK_IF . expr stmt_list
   72        | TOK_IF . expr stmt_list TOK_ELSE if_stmt
   73        | TOK_IF . expr stmt_list TOK_ELSE stmt_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 172
    al_expr  go to state 65
    var      go to state 66


State 155

   74 for_stmt: TOK_FOR . TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr TOK_STEP expr stmt_list
   75         | TOK_FOR . TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr stmt_list

    TOK_IDENTIFIER  shift, and go to state 173


State 156

   76 while_stmt: TOK_WHILE . expr stmt_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 174
    al_expr  go to state 65
    var      go to state 66


State 157

   77 switch_stmt: TOK_SWITCH . expr TOK_LCURLY case_list TOK_RCURLY
   78            | TOK_SWITCH . expr TOK_LCURLY case_list TOK_DEFAULT stmt_list TOK_RCURLY
   79            | TOK_SWITCH . error TOK_LCURLY
   80            | TOK_SWITCH . expr TOK_LCURLY error TOK_RCURLY

    error                shift, and go to state 175
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 176
    al_expr  go to state 65
    var      go to state 66


State 158

   85 print_stmt: TOK_PRINT . expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 177
    al_expr  go to state 65
    var      go to state 66


State 159

   86 read_stmt: TOK_READ . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 178


State 160

   51 stmt_list: TOK_LCURLY stmt_list_semicolon . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 179


State 161

   53 stmt_list_semicolon: stmt .
   54                    | stmt . TOK_SEMICOLON stmt_list_semicolon

    TOK_SEMICOLON  shift, and go to state 180

    $default  reduce using rule 53 (stmt_list_semicolon)


State 162

   58 stmt: return_stmt .

    $default  reduce using rule 58 (stmt)


State 163

   59 stmt: if_stmt .

    $default  reduce using rule 59 (stmt)


State 164

   61 stmt: for_stmt .

    $default  reduce using rule 61 (stmt)


State 165

   60 stmt: while_stmt .

    $default  reduce using rule 60 (stmt)


State 166

   62 stmt: switch_stmt .

    $default  reduce using rule 62 (stmt)


State 167

   63 stmt: print_stmt .

    $default  reduce using rule 63 (stmt)


State 168

   64 stmt: read_stmt .

    $default  reduce using rule 64 (stmt)


State 169

   55 stmt: var . TOK_ASSIGN expr
   56     | var . TOK_LPAREN actual_params_list TOK_RPAREN
   57     | var . TOK_LPAREN error TOK_RPAREN

    TOK_LPAREN  shift, and go to state 181
    TOK_ASSIGN  shift, and go to state 182


State 170

   52 stmt_list: TOK_LCURLY error TOK_RCURLY .

    $default  reduce using rule 52 (stmt_list)


State 171

   70 return_stmt: TOK_RETURN expr .

    $default  reduce using rule 70 (return_stmt)


State 172

   71 if_stmt: TOK_IF expr . stmt_list
   72        | TOK_IF expr . stmt_list TOK_ELSE if_stmt
   73        | TOK_IF expr . stmt_list TOK_ELSE stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 183


State 173

   74 for_stmt: TOK_FOR TOK_IDENTIFIER . TOK_ASSIGN expr TOK_TO expr TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER . TOK_ASSIGN expr TOK_TO expr stmt_list

    TOK_ASSIGN  shift, and go to state 184


State 174

   76 while_stmt: TOK_WHILE expr . stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 185


State 175

   79 switch_stmt: TOK_SWITCH error . TOK_LCURLY

    TOK_LCURLY  shift, and go to state 186


State 176

   77 switch_stmt: TOK_SWITCH expr . TOK_LCURLY case_list TOK_RCURLY
   78            | TOK_SWITCH expr . TOK_LCURLY case_list TOK_DEFAULT stmt_list TOK_RCURLY
   80            | TOK_SWITCH expr . TOK_LCURLY error TOK_RCURLY

    TOK_LCURLY  shift, and go to state 187


State 177

   85 print_stmt: TOK_PRINT expr .

    $default  reduce using rule 85 (print_stmt)


State 178

   86 read_stmt: TOK_READ TOK_IDENTIFIER .

    $default  reduce using rule 86 (read_stmt)


State 179

   51 stmt_list: TOK_LCURLY stmt_list_semicolon TOK_RCURLY .

    $default  reduce using rule 51 (stmt_list)


State 180

   54 stmt_list_semicolon: stmt TOK_SEMICOLON . stmt_list_semicolon

    TOK_IDENTIFIER  shift, and go to state 52
    TOK_RETURN      shift, and go to state 153
    TOK_IF          shift, and go to state 154
    TOK_FOR         shift, and go to state 155
    TOK_WHILE       shift, and go to state 156
    TOK_SWITCH      shift, and go to state 157
    TOK_PRINT       shift, and go to state 158
    TOK_READ        shift, and go to state 159

    stmt_list_semicolon  go to state 188
    stmt                 go to state 161
    return_stmt          go to state 162
    if_stmt              go to state 163
    for_stmt             go to state 164
    while_stmt           go to state 165
    switch_stmt          go to state 166
    print_stmt           go to state 167
    read_stmt            go to state 168
    var                  go to state 169


State 181

   56 stmt: var TOK_LPAREN . actual_params_list TOK_RPAREN
   57     | var TOK_LPAREN . error TOK_RPAREN

    error                shift, and go to state 189
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    TOK_RPAREN  reduce using rule 65 (actual_params_list)

    actual_params_list  go to state 190
    expr_list_comma     go to state 125
    expr                go to state 101
    al_expr             go to state 65
    var                 go to state 66


State 182

   55 stmt: var TOK_ASSIGN . expr

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 191
    al_expr  go to state 65
    var      go to state 66


State 183

   71 if_stmt: TOK_IF expr stmt_list .
   72        | TOK_IF expr stmt_list . TOK_ELSE if_stmt
   73        | TOK_IF expr stmt_list . TOK_ELSE stmt_list

    TOK_ELSE  shift, and go to state 192

    $default  reduce using rule 71 (if_stmt)


State 184

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN . expr TOK_TO expr TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER TOK_ASSIGN . expr TOK_TO expr stmt_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 193
    al_expr  go to state 65
    var      go to state 66


State 185

   76 while_stmt: TOK_WHILE expr stmt_list .

    $default  reduce using rule 76 (while_stmt)


State 186

   79 switch_stmt: TOK_SWITCH error TOK_LCURLY .

    $default  reduce using rule 79 (switch_stmt)


State 187

   77 switch_stmt: TOK_SWITCH expr TOK_LCURLY . case_list TOK_RCURLY
   78            | TOK_SWITCH expr TOK_LCURLY . case_list TOK_DEFAULT stmt_list TOK_RCURLY
   80            | TOK_SWITCH expr TOK_LCURLY . error TOK_RCURLY

    error     shift, and go to state 194
    TOK_CASE  shift, and go to state 195

    case       go to state 196
    case_list  go to state 197


State 188

   54 stmt_list_semicolon: stmt TOK_SEMICOLON stmt_list_semicolon .

    $default  reduce using rule 54 (stmt_list_semicolon)


State 189

   57 stmt: var TOK_LPAREN error . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 198


State 190

   56 stmt: var TOK_LPAREN actual_params_list . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 199


State 191

   55 stmt: var TOK_ASSIGN expr .

    $default  reduce using rule 55 (stmt)


State 192

   72 if_stmt: TOK_IF expr stmt_list TOK_ELSE . if_stmt
   73        | TOK_IF expr stmt_list TOK_ELSE . stmt_list

    TOK_LCURLY  shift, and go to state 148
    TOK_IF      shift, and go to state 154

    stmt_list  go to state 200
    if_stmt    go to state 201


State 193

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr . TOK_TO expr TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr . TOK_TO expr stmt_list

    TOK_TO  shift, and go to state 202


State 194

   80 switch_stmt: TOK_SWITCH expr TOK_LCURLY error . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 203


State 195

   81 case: TOK_CASE . expr stmt_list
   82     | TOK_CASE . error stmt_list

    error                shift, and go to state 204
    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 205
    al_expr  go to state 65
    var      go to state 66


State 196

   83 case_list: case .
   84          | case . case_list

    TOK_CASE  shift, and go to state 195

    $default  reduce using rule 83 (case_list)

    case       go to state 196
    case_list  go to state 206


State 197

   77 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list . TOK_RCURLY
   78            | TOK_SWITCH expr TOK_LCURLY case_list . TOK_DEFAULT stmt_list TOK_RCURLY

    TOK_RCURLY   shift, and go to state 207
    TOK_DEFAULT  shift, and go to state 208


State 198

   57 stmt: var TOK_LPAREN error TOK_RPAREN .

    $default  reduce using rule 57 (stmt)


State 199

   56 stmt: var TOK_LPAREN actual_params_list TOK_RPAREN .

    $default  reduce using rule 56 (stmt)


State 200

   73 if_stmt: TOK_IF expr stmt_list TOK_ELSE stmt_list .

    $default  reduce using rule 73 (if_stmt)


State 201

   72 if_stmt: TOK_IF expr stmt_list TOK_ELSE if_stmt .

    $default  reduce using rule 72 (if_stmt)


State 202

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO . expr TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO . expr stmt_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 209
    al_expr  go to state 65
    var      go to state 66


State 203

   80 switch_stmt: TOK_SWITCH expr TOK_LCURLY error TOK_RCURLY .

    $default  reduce using rule 80 (switch_stmt)


State 204

   82 case: TOK_CASE error . stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 210


State 205

   81 case: TOK_CASE expr . stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 211


State 206

   84 case_list: case case_list .

    $default  reduce using rule 84 (case_list)


State 207

   77 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list TOK_RCURLY .

    $default  reduce using rule 77 (switch_stmt)


State 208

   78 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list TOK_DEFAULT . stmt_list TOK_RCURLY

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 212


State 209

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr . TOK_STEP expr stmt_list
   75         | TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr . stmt_list

    TOK_LCURLY  shift, and go to state 148
    TOK_STEP    shift, and go to state 213

    stmt_list  go to state 214


State 210

   82 case: TOK_CASE error stmt_list .

    $default  reduce using rule 82 (case)


State 211

   81 case: TOK_CASE expr stmt_list .

    $default  reduce using rule 81 (case)


State 212

   78 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list TOK_DEFAULT stmt_list . TOK_RCURLY

    TOK_RCURLY  shift, and go to state 215


State 213

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr TOK_STEP . expr stmt_list

    TOK_IDENTIFIER       shift, and go to state 52
    TOK_LPAREN           shift, and go to state 54
    TOK_PLUS             shift, and go to state 56
    TOK_MINUS            shift, and go to state 57
    TOK_NOT              shift, and go to state 58
    TOK_INTEGERCONSTANT  shift, and go to state 59
    TOK_STRINGCONSTANT   shift, and go to state 60

    expr     go to state 216
    al_expr  go to state 65
    var      go to state 66


State 214

   75 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr stmt_list .

    $default  reduce using rule 75 (for_stmt)


State 215

   78 switch_stmt: TOK_SWITCH expr TOK_LCURLY case_list TOK_DEFAULT stmt_list TOK_RCURLY .

    $default  reduce using rule 78 (switch_stmt)


State 216

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr TOK_STEP expr . stmt_list

    TOK_LCURLY  shift, and go to state 148

    stmt_list  go to state 217


State 217

   74 for_stmt: TOK_FOR TOK_IDENTIFIER TOK_ASSIGN expr TOK_TO expr TOK_STEP expr stmt_list .

    $default  reduce using rule 74 (for_stmt)
